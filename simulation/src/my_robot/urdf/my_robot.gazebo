<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Gazebo plugin for ROS Control -->
<!--<gazebo>-->
<!--<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">-->
<!--    <robotNamespace>/</robotNamespace>-->
<!--</plugin>-->
<!--</gazebo>-->

   <gazebo reference="base_footprint">
     <turnGravityOff>false</turnGravityOff>
   </gazebo>
  <gazebo reference="link_chassis">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="link_left_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="link_right_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="link_right_front_wheel">
      <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="link_left_front_wheel">
        <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="link_chassis">
      <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <gazebo reference="caster_front_link">
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

<!--    <gazebo>-->
<!--        <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">-->
<!--            <alwaysOn>true</alwaysOn>-->
<!--            <updateRate>20</updateRate>-->
<!--            <leftJoint>joint_left_rear_wheel</leftJoint>-->
<!--            <rightJoint>joint_right_rear_wheel</rightJoint>-->
<!--            <wheelSeparation>0.4</wheelSeparation>-->
<!--            <wheelDiameter>0.2</wheelDiameter>-->
<!--            <torque>20</torque>-->
<!--            <wheelTorque>20</wheelTorque>-->
<!--            <commandTopic>cmd_vel</commandTopic>-->
<!--            <odometryTopic>odom</odometryTopic>-->
<!--            <odometryFrame>odom</odometryFrame>-->
<!--            <robotBaseFrame>base_footprint</robotBaseFrame>-->
<!--            <publishWheelTF>true</publishWheelTF>-->
<!--            <publishWheelJointState>true</publishWheelJointState>-->
<!--        </plugin>-->
<!--    </gazebo>-->

<gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <!-- Plugin update rate in Hz -->
    <updateRate>50.0</updateRate>
    <robotNamespace>/</robotNamespace>
    <!-- Name of left joint, defaults to `left_joint` -->
    <leftFrontJoint>joint_left_front_wheel</leftFrontJoint>
    <rightFrontJoint>joint_right_front_wheel</rightFrontJoint>
    <leftRearJoint>joint_left_rear_wheel</leftRearJoint>
    <rightRearJoint>joint_right_rear_wheel</rightRearJoint>
    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.472</wheelSeparation>   <!-- wheel_sparation + wheel width -->
    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.19</wheelDiameter>
    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>0.0</wheelAcceleration>
    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_footprint</robotBaseFrame>
    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <torque>200</torque>
    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
<!--    <topicName>cmd_vel_autorally</topicName>-->
    <topicName>cmd_vel</topicName>
    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>
    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>
    <broadcastTF>true</broadcastTF>
<!--    <commandTopic>cmd_vel_autorally</commandTopic>-->
    <commandTopic>cmd_vel</commandTopic>
    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>
    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>
    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>
    <covariance_x>0.001</covariance_x> <!-- 0.0001 -->
    <covariance_y>0.001</covariance_y> <!-- 0.0001 -->
    <covariance_yaw>0.01</covariance_yaw> <!-- 0.01 -->

  </plugin>
</gazebo>

  <!-- camera -->
  <gazebo reference="camera_link">
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>9.0</far>
          </clip>
        </camera>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>camera</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>camera_depth_optical_frame</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
</gazebo>





</robot>

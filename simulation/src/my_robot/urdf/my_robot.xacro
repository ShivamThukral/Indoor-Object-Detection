<?xml version="1.0" ?>
<robot name="my_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- PROPERTY LIST -->
  <!--All units in m-kg-s-radians unit system -->
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="M_PI_2" value="1.570796327" />
  <xacro:property name="DEG_TO_RAD" value="0.017453293" />

  <!-- FILE INCLUDES -->
  <xacro:include filename="$(find my_robot)/urdf/materials.xacro" />
  <xacro:include filename="$(find my_robot)/urdf/my_robot.gazebo" />
  <xacro:include filename="$(find my_robot)/urdf/macros.xacro" />

    <!-- Camera tilt of the wheelchair -->
  <xacro:property name="tilt" value="0.174533" /> <!-- 10 degree-->

    <!-- Main Chassis Box Dimensions -->
    <xacro:property name="chassis_length" value="0.5" />
    <xacro:property name="chassis_width" value="0.3" />
    <xacro:property name="chassis_height" value="0.07" />
    <xacro:property name="chassis_mass" value="5.5" /><!-- in kg-->

  <!-- Wheels  Property-->
  <xacro:property name="wheel_radius" value="0.095" />
  <xacro:property name="wheel_length" value="0.072" />
  <xacro:property name="wheel_mass" value="0.82" /> <!-- in kg-->
  <xacro:property name="wheel_x_travel" value="${chassis_length/2.0}" /> <!-- in kg-->
  <xacro:property name="wheel_y_travel" value="0.2" /> <!-- in kg-->



    <!-- caster wheel radius and height -->
  <!-- caster wheel mass -->
<!--  <xacro:property name="caster_height" value="0.04" />-->
<!--  <xacro:property name="caster_radius" value="0.05" />-->
<!--  <xacro:property name="caster_mass" value="0.5" /> &lt;!&ndash; in kg&ndash;&gt;-->

  <!-- Main Body Cylinder    -->
 <xacro:property name="cylinder_height" value="1" />
 <xacro:property name="cylinder_radius" value="0.05" />
 <xacro:property name="cylinder_mass" value="0.5" /> <!-- in kg-->


    <!-- BASE-FOOTPRINT -->
    <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
    <link name="base_footprint"/>

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="link_chassis" />
    </joint>

    <link name="link_chassis">
        <inertial>
            <mass value="${chassis_mass}"/>
            <origin rpy="0 0 0" xyz="0 0 0.1"/>
            <inertia ixx="0.0395416666667" ixy="0" ixz="0" iyy="0.106208333333" iyz="0" izz="0.106208333333"/>
        </inertial>
        <!-- body -->
        <collision name="collision_chassis">
            <geometry>
            <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
            <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
            <material name="blue"/>
        </visual>
    </link>


<!--    <link name="caster_front_link">-->
<!--      <visual name="caster_front_visual">-->
<!--        <origin xyz=" 0 0 0" rpy="0 0 0" />-->
<!--        <geometry>-->
<!--          <sphere radius="${caster_radius}" />-->
<!--        </geometry>-->
<!--        <material name="white" />-->
<!--      </visual>-->
<!--      <collision name="caster_front_collision">-->
<!--        <geometry>-->
<!--          <sphere radius="${caster_radius}" />-->
<!--        </geometry>-->
<!--        <origin xyz=" 0 0 0" rpy="0 0 0" />-->
<!--        <surface>-->
<!--          <friction>-->
<!--            <ode>-->
<!--              <mu>0</mu>-->
<!--              <mu2>0</mu2>-->
<!--              <slip1>1.0</slip1>-->
<!--              <slip2>1.0</slip2>-->
<!--            </ode>-->
<!--          </friction>-->
<!--        </surface>-->
<!--      </collision>-->
<!--      <inertial>-->
<!--        <mass value="${caster_mass}" />-->
<!--        <origin xyz=" 0 0 0" />-->
<!--        <inertia ixx="0.001" ixy="0.0" ixz="0.0"-->
<!--          iyy="0.001" iyz="0.0"-->
<!--          izz="0.001" />-->
<!--        </inertial>-->
<!--      </link>-->

<!--    <joint name="caster_front_joint" type="continuous">-->
<!--        <parent link="link_chassis"/>-->
<!--        <child link="caster_front_link"/>-->
<!--        <origin xyz="0.2 0 -0.05" rpy="0 0 0"/>-->
<!--        <axis xyz="0 1 0"/>-->
<!--    </joint>-->


<!--    &lt;!&ndash;Added for ball linke joint &ndash;&gt;-->
<!--    <link name="caster_front_link1">-->
<!--        <visual name="caster_front_visual1">-->
<!--            <origin xyz=" 0 0 0" rpy="0 0 0" />-->
<!--            <geometry>-->
<!--                <sphere radius="${caster_radius}" />-->
<!--            </geometry>-->
<!--            <material name="white" />-->
<!--        </visual>-->
<!--        <collision name="caster_front_collision1">-->
<!--            <geometry>-->
<!--                <sphere radius="${caster_radius}" />-->
<!--            </geometry>-->
<!--            <origin xyz=" 0 0 0" rpy="0 0 0" />-->
<!--            <surface>-->
<!--                <friction>-->
<!--                    <ode>-->
<!--                        <mu>0</mu>-->
<!--                        <mu2>0</mu2>-->
<!--                        <slip1>1.0</slip1>-->
<!--                        <slip2>1.0</slip2>-->
<!--                    </ode>-->
<!--                </friction>-->
<!--            </surface>-->
<!--        </collision>-->
<!--        <inertial>-->
<!--            <mass value="${caster_mass}" />-->
<!--            <origin xyz=" 0 0 0" />-->
<!--            <inertia ixx="0.001" ixy="0.0" ixz="0.0"-->
<!--                     iyy="0.001" iyz="0.0"-->
<!--                     izz="0.001" />-->
<!--        </inertial>-->
<!--    </link>-->

<!--    <joint name="caster_front_joint1" type="continuous">-->
<!--        <parent link="caster_front_link"/>-->
<!--        <child link="caster_front_link1"/>-->
<!--        <axis xyz="0 0 1" />-->
<!--    </joint>-->

<!--    <link name="caster_front_link2">-->
<!--        <visual name="caster_front_visual2">-->
<!--            <origin xyz=" 0 0 0" rpy="0 0 0" />-->
<!--            <geometry>-->
<!--                <sphere radius="${caster_radius}" />-->
<!--            </geometry>-->
<!--            <material name="white" />-->
<!--        </visual>-->
<!--        <collision name="caster_front_collision2">-->
<!--            <geometry>-->
<!--                <sphere radius="${caster_radius}" />-->
<!--            </geometry>-->
<!--            <origin xyz=" 0 0 0" rpy="0 0 0" />-->
<!--            <surface>-->
<!--                <friction>-->
<!--                    <ode>-->
<!--                        <mu>0</mu>-->
<!--                        <mu2>0</mu2>-->
<!--                        <slip1>1.0</slip1>-->
<!--                        <slip2>1.0</slip2>-->
<!--                    </ode>-->
<!--                </friction>-->
<!--            </surface>-->
<!--        </collision>-->
<!--        <inertial>-->
<!--            <mass value="${caster_mass}" />-->
<!--            <origin xyz=" 0 0 0" />-->
<!--            <inertia ixx="0.001" ixy="0.0" ixz="0.0"-->
<!--                     iyy="0.001" iyz="0.0"-->
<!--                     izz="0.001" />-->
<!--        </inertial>-->
<!--    </link>-->

<!--    <joint name="caster_front_joint2" type="continuous">-->
<!--        <parent link="caster_front_link1"/>-->
<!--        <child link="caster_front_link2"/>-->
<!--        <axis xyz="1 0 0" />-->
<!--    </joint>-->


    <link name="sensor_base">
        <inertial>
            <origin xyz="0 0 ${cylinder_height/2.0}" rpy="0 0 0" />
            <mass value="${cylinder_mass}" />
            <xacro:cylinder_inertia mass="${cylinder_mass}" r="${cylinder_radius}" l="${cylinder_height}" />
        </inertial>
        <visual>
            <origin xyz="0 0 ${cylinder_height/2.0}" rpy="0 0 0" />
            <geometry>
            <cylinder radius="${cylinder_radius}" length="${cylinder_height}"/>
            </geometry>
            <material name="white" />
        </visual>
        <collision>
            <origin xyz="0 0 ${cylinder_height/2.0}" rpy="0 0 0"/>
            <geometry>
            <cylinder radius="${cylinder_radius}" length="${cylinder_height}"/>
            </geometry>
        </collision>
    </link>

   <joint name="joint_sensor_laser" type="fixed">
       <origin xyz="0.0 0 0" rpy="0 0 0"/>
       <parent link="link_chassis"/>
       <child link="sensor_base"/>
   </joint>

    <!-- Kinect -->
    <joint name="camera_rgb_joint" type="fixed">
        <origin xyz="0.05 0 ${cylinder_height+0.05}" rpy="0 ${tilt} 0"/>
        <parent link="sensor_base"/>
        <child link="camera_rgb_frame" />
    </joint>

    <link name="camera_rgb_frame"/>

    <joint name="camera_rgb_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="camera_rgb_frame" />
        <child link="camera_rgb_optical_frame" />
    </joint>

    <link name="camera_rgb_optical_frame"/>

    <joint name="camera_joint" type="fixed">
        <origin xyz="-0.031 0 -0.016" rpy="0 0 0"/>
        <parent link="camera_rgb_frame"/>
        <child link="camera_link"/>
    </joint>

    <link name="camera_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}"/>
            <geometry>
                <mesh filename="package://my_robot/meshes/kinect.dae"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
            <geometry>
             <box size="0.07271 0.27794 0.073"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.564" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                    iyy="0.000498940" iyz="0.0"
                    izz="0.003879257" />
        </inertial>
    </link>

    <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch
        files. However, for Gazebo simulation we need them, so we add them here.
        (Hence, don't publish them additionally!) -->
    <joint name="camera_depth_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="camera_rgb_frame" />
        <child link="camera_depth_frame" />
    </joint>

    <link name="camera_depth_frame"/>

    <joint name="camera_depth_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="camera_depth_frame" />
        <child link="camera_depth_optical_frame" />
    </joint>

    <link name="camera_depth_optical_frame"/>

    <xacro:link_wheel name="link_right_rear_wheel" radius="${wheel_radius}" length="${wheel_length}" mass="${wheel_mass}" />
    <xacro:joint_wheel name="joint_right_rear_wheel" child="link_right_rear_wheel" origin_xyz="-${wheel_x_travel} ${wheel_y_travel} 0" />

    <xacro:link_wheel name="link_left_rear_wheel" radius="${wheel_radius}" length="${wheel_length}" mass="${wheel_mass}" />
    <xacro:joint_wheel name="joint_left_rear_wheel" child="link_left_rear_wheel" origin_xyz="-${wheel_x_travel} -${wheel_y_travel} 0" />

    <xacro:link_wheel name="link_right_front_wheel" radius="${wheel_radius}" length="${wheel_length}" mass="${wheel_mass}" />
    <xacro:joint_wheel name="joint_right_front_wheel" child="link_right_front_wheel" origin_xyz=" ${wheel_x_travel} ${wheel_y_travel} 0" />

    <xacro:link_wheel name="link_left_front_wheel" radius="${wheel_radius}" length="${wheel_length}" mass="${wheel_mass}" />
    <xacro:joint_wheel name="joint_left_front_wheel" child="link_left_front_wheel" origin_xyz=" ${wheel_x_travel} -${wheel_y_travel} 0" />

<!--    <xacro:wheel prefix="right" suffix="front" origin_xyz=" ${wheel_x_travel} ${wheel_y_travel} 0" wheel_radius="${wheel_radius}" wheel_width="${wheel_length}" wheel_mass="${wheel_mass}"/>-->
<!--    <xacro:wheel prefix="right" suffix="back" origin_xyz="-${wheel_x_travel} ${wheel_y_travel} 0" wheel_radius="${wheel_radius}" wheel_width="${wheel_length}" wheel_mass="${wheel_mass}"/>-->
<!--    <xacro:wheel prefix="left" suffix="front" origin_xyz=" ${wheel_x_travel} -${wheel_y_travel} 0" wheel_radius="${wheel_radius}" wheel_width="${wheel_length}" wheel_mass="${wheel_mass}"/>-->
<!--    <xacro:wheel prefix="left" suffix="back" origin_xyz="-${wheel_x_travel} -${wheel_y_travel} 0" wheel_radius="${wheel_radius}" wheel_width="${wheel_length}" wheel_mass="${wheel_mass}"/>-->

</robot>


